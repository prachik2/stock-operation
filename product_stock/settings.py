"""
Django settings for product_stock project.

Generated by 'django-admin startproject' using Django 1.11.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '(*jpb9k$k+@of+gxgrg-2!b9w+$53eiy^-r(p^h&7_9$pj!uys'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['192.168.2.50', '127.0.0.1']


# Application definition

INSTALLED_APPS = [


    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'silk',

    'product_app',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'silk.middleware.SilkyMiddleware',
    ]

X_FRAME_OPTIONS = 'DENY'

ROOT_URLCONF = 'product_stock.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'product_stock.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/
PROJECT_DIR = os.path.dirname(os.path.abspath(__file__))
STATIC_ROOT = os.path.join(PROJECT_DIR, 'static')
MEDIA_ROOT = os.path.join(PROJECT_DIR, 'media')
STATIC_URL = '/static/'

SILKY_PYTHON_PROFILER = True

SILKY_PYTHON_PROFILER_BINARY = True

SILKY_AUTHENTICATION = True

SILKY_AUTHORISATION = True  # User must have permissions

SILKY_META = True

SILKY_MAX_REQUEST_BODY_SIZE = -1  # Silk takes anything <0 as no limit

SILKY_MAX_RESPONSE_BODY_SIZE = 1024  # If response body>1024kb, ignore

SILKY_INTERCEPT_PERCENT = 50 # log only 50% of requests

# SILKY_MAX_RECORDED_REQUESTS = 10**4
#
# SILKY_MAX_RECORDED_REQUESTS_CHECK_PERCENT = 10

SILKY_STORAGE_CLASS = 'path.to.StorageClass'

#
# def my_custom_perms(user):
#     return user.is_allowed_to_use_silk
#
#
# def my_custom_logic(request):
#     return 'record_requests' in request.session

#
# SILKY_INTERCEPT_FUNC = my_custom_logic
#
# SILKY_PERMISSIONS = my_custom_perms

# If this is not set, MEDIA_ROOT will be used.
SILKY_PYTHON_PROFILER_RESULT_PATH = '/home/prachi/Development/other/productstock/path/to/profiles/'

# SILKY_DYNAMIC_PROFILING = [{
#     'module': 'path.to.module',
#     'function': 'stock',
# }]